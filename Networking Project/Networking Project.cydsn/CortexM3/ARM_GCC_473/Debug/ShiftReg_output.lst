ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ShiftReg_output.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ShiftReg_output_initVar
  19              		.bss
  20              		.type	ShiftReg_output_initVar, %object
  21              		.size	ShiftReg_output_initVar, 1
  22              	ShiftReg_output_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.ShiftReg_output_Start,"ax",%progbits
  25              		.align	2
  26              		.global	ShiftReg_output_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	ShiftReg_output_Start, %function
  30              	ShiftReg_output_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\ShiftReg_output.c"
   1:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ShiftReg_output.c **** * File Name: ShiftReg_output.c
   3:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
   5:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Description:
   6:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  This file provides the API source code for the Shift Register component.
   7:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
   8:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Note: none
   9:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  10:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ShiftReg_output.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/ShiftReg_output.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/ShiftReg_output.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************/
  16:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  17:.\Generated_Source\PSoC5/ShiftReg_output.c **** #include "ShiftReg_output.h"
  18:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  19:.\Generated_Source\PSoC5/ShiftReg_output.c **** uint8 ShiftReg_output_initVar = 0u;
  20:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  21:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  22:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
  23:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_Start
  24:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
  25:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 2


  26:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
  27:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Starts the Shift Register.
  28:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  29:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
  30:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
  31:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  32:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
  33:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
  34:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  35:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Global Variables:
  36:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  ShiftReg_output_initVar - used to check initial configuration, modified on
  37:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  first function call.
  38:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  39:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Reentrant:
  40:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  No.
  41:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  42:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_Start(void) 
  44:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/ShiftReg_output.c ****     if(0u == ShiftReg_output_initVar)
  45              		.loc 1 45 0
  46 0004 40F20003 		movw	r3, #:lower16:ShiftReg_output_initVar
  47 0008 C0F20003 		movt	r3, #:upper16:ShiftReg_output_initVar
  48 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  49 000e 002B     		cmp	r3, #0
  50 0010 08D1     		bne	.L2
  46:.\Generated_Source\PSoC5/ShiftReg_output.c ****     {
  47:.\Generated_Source\PSoC5/ShiftReg_output.c ****         ShiftReg_output_Init();
  51              		.loc 1 47 0
  52 0012 FFF7FEFF 		bl	ShiftReg_output_Init
  48:.\Generated_Source\PSoC5/ShiftReg_output.c ****         ShiftReg_output_initVar = 1u; /* Component initialized */
  53              		.loc 1 48 0
  54 0016 40F20003 		movw	r3, #:lower16:ShiftReg_output_initVar
  55 001a C0F20003 		movt	r3, #:upper16:ShiftReg_output_initVar
  56 001e 4FF00102 		mov	r2, #1
  57 0022 1A70     		strb	r2, [r3, #0]
  58              	.L2:
  49:.\Generated_Source\PSoC5/ShiftReg_output.c ****     }
  50:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  51:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_Enable();
  59              		.loc 1 51 0
  60 0024 FFF7FEFF 		bl	ShiftReg_output_Enable
  52:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
  61              		.loc 1 52 0
  62 0028 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 3


  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	ShiftReg_output_Start, .-ShiftReg_output_Start
  66 002a 00BF     		.section	.text.ShiftReg_output_Enable,"ax",%progbits
  67              		.align	2
  68              		.global	ShiftReg_output_Enable
  69              		.thumb
  70              		.thumb_func
  71              		.type	ShiftReg_output_Enable, %function
  72              	ShiftReg_output_Enable:
  73              	.LFB1:
  53:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  54:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  55:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_Enable
  57:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
  58:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  59:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
  60:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Enables the Shift Register.
  61:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  62:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
  63:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  void.
  64:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  65:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
  66:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  void.
  67:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  68:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_Enable(void) 
  70:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
  74              		.loc 1 70 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
  71:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /* Changing address in Datapath Control Store
  72:.\Generated_Source\PSoC5/ShiftReg_output.c ****        from NOP to component state machine commands space */
  73:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_CONTROL |= ShiftReg_output_CLK_EN;
  86              		.loc 1 73 0
  87 0004 46F27753 		movw	r3, #25975
  88 0008 C4F20003 		movt	r3, 16384
  89 000c 46F27752 		movw	r2, #25975
  90 0010 C4F20002 		movt	r2, 16384
  91 0014 1278     		ldrb	r2, [r2, #0]
  92 0016 D2B2     		uxtb	r2, r2
  93 0018 42F00102 		orr	r2, r2, #1
  94 001c D2B2     		uxtb	r2, r2
  95 001e 1A70     		strb	r2, [r3, #0]
  74:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  75:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_EnableInt();
  96              		.loc 1 75 0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 4


  97 0020 FFF7FEFF 		bl	ShiftReg_output_EnableInt
  76:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
  98              		.loc 1 76 0
  99 0024 80BD     		pop	{r7, pc}
 100              		.cfi_endproc
 101              	.LFE1:
 102              		.size	ShiftReg_output_Enable, .-ShiftReg_output_Enable
 103 0026 00BF     		.section	.text.ShiftReg_output_Init,"ax",%progbits
 104              		.align	2
 105              		.global	ShiftReg_output_Init
 106              		.thumb
 107              		.thumb_func
 108              		.type	ShiftReg_output_Init, %function
 109              	ShiftReg_output_Init:
 110              	.LFB2:
  77:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  78:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  79:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_Init
  81:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
  82:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  83:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
  84:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Initializes Tx and/or Rx interrupt sources with initial values.
  85:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  86:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
  87:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  void.
  88:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  89:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
  90:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  void.
  91:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
  92:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
  93:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_Init(void) 
  94:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 111              		.loc 1 94 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 00AF     		add	r7, sp, #0
 121              	.LCFI5:
 122              		.cfi_def_cfa_register 7
  95:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SetIntMode(ShiftReg_output_INT_SRC);
 123              		.loc 1 95 0
 124 0004 4FF00000 		mov	r0, #0
 125 0008 FFF7FEFF 		bl	ShiftReg_output_SetIntMode
  96:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 126              		.loc 1 96 0
 127 000c 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE2:
 130              		.size	ShiftReg_output_Init, .-ShiftReg_output_Init
 131 000e 00BF     		.section	.text.ShiftReg_output_Stop,"ax",%progbits
 132              		.align	2
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 5


 133              		.global	ShiftReg_output_Stop
 134              		.thumb
 135              		.thumb_func
 136              		.type	ShiftReg_output_Stop, %function
 137              	ShiftReg_output_Stop:
 138              	.LFB3:
  97:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  98:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
  99:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 100:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_Stop
 101:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 102:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 103:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 104:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Disables the Shift Register
 105:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 106:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 107:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 108:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 109:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 110:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 111:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 112:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_Stop(void) 
 114:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 139              		.loc 1 114 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI6:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 00AF     		add	r7, sp, #0
 149              	.LCFI7:
 150              		.cfi_def_cfa_register 7
 115:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /*changing Datapath Control Store address to NOP space*/
 116:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_CONTROL &= ((uint8) ~ShiftReg_output_CLK_EN);
 151              		.loc 1 116 0
 152 0004 46F27753 		movw	r3, #25975
 153 0008 C4F20003 		movt	r3, 16384
 154 000c 46F27752 		movw	r2, #25975
 155 0010 C4F20002 		movt	r2, 16384
 156 0014 1278     		ldrb	r2, [r2, #0]
 157 0016 D2B2     		uxtb	r2, r2
 158 0018 22F00102 		bic	r2, r2, #1
 159 001c D2B2     		uxtb	r2, r2
 160 001e 1A70     		strb	r2, [r3, #0]
 117:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_DisableInt();
 161              		.loc 1 117 0
 162 0020 FFF7FEFF 		bl	ShiftReg_output_DisableInt
 118:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 163              		.loc 1 118 0
 164 0024 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE3:
 167              		.size	ShiftReg_output_Stop, .-ShiftReg_output_Stop
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 6


 168 0026 00BF     		.section	.text.ShiftReg_output_EnableInt,"ax",%progbits
 169              		.align	2
 170              		.global	ShiftReg_output_EnableInt
 171              		.thumb
 172              		.thumb_func
 173              		.type	ShiftReg_output_EnableInt, %function
 174              	ShiftReg_output_EnableInt:
 175              	.LFB4:
 119:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 120:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 121:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 122:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_EnableInt
 123:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 124:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 125:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 126:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Enables the Shift Register interrupt.
 127:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 128:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 129:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 130:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 131:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 132:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 133:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 134:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 135:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_EnableInt(void) 
 136:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 176              		.loc 1 136 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 8
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI8:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              	.LCFI9:
 187              		.cfi_def_cfa_offset 16
 188 0004 00AF     		add	r7, sp, #0
 189              	.LCFI10:
 190              		.cfi_def_cfa_register 7
 137:.\Generated_Source\PSoC5/ShiftReg_output.c ****     uint8 interruptState;
 138:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 139:.\Generated_Source\PSoC5/ShiftReg_output.c ****     interruptState = CyEnterCriticalSection();
 191              		.loc 1 139 0
 192 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 193 000a 0346     		mov	r3, r0
 194 000c FB71     		strb	r3, [r7, #7]
 140:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_AUX_CONTROL |= ShiftReg_output_INTERRUPTS_ENABLE;
 195              		.loc 1 140 0
 196 000e 46F29753 		movw	r3, #26007
 197 0012 C4F20003 		movt	r3, 16384
 198 0016 46F29752 		movw	r2, #26007
 199 001a C4F20002 		movt	r2, 16384
 200 001e 1278     		ldrb	r2, [r2, #0]
 201 0020 D2B2     		uxtb	r2, r2
 202 0022 42F01002 		orr	r2, r2, #16
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 7


 203 0026 D2B2     		uxtb	r2, r2
 204 0028 1A70     		strb	r2, [r3, #0]
 141:.\Generated_Source\PSoC5/ShiftReg_output.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 141 0
 206 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 207 002c 1846     		mov	r0, r3
 208 002e FFF7FEFF 		bl	CyExitCriticalSection
 142:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 209              		.loc 1 142 0
 210 0032 07F10807 		add	r7, r7, #8
 211 0036 BD46     		mov	sp, r7
 212 0038 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE4:
 215              		.size	ShiftReg_output_EnableInt, .-ShiftReg_output_EnableInt
 216 003a 00BF     		.section	.text.ShiftReg_output_DisableInt,"ax",%progbits
 217              		.align	2
 218              		.global	ShiftReg_output_DisableInt
 219              		.thumb
 220              		.thumb_func
 221              		.type	ShiftReg_output_DisableInt, %function
 222              	ShiftReg_output_DisableInt:
 223              	.LFB5:
 143:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 144:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 145:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 146:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_DisableInt
 147:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 148:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 149:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 150:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Disables the Shift Register interrupt.
 151:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 152:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 153:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 154:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 155:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 156:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 157:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 158:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 159:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_DisableInt(void) 
 160:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 224              		.loc 1 160 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              	.LCFI11:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              	.LCFI12:
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI13:
 238              		.cfi_def_cfa_register 7
 161:.\Generated_Source\PSoC5/ShiftReg_output.c ****     uint8 interruptState;
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 8


 162:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 163:.\Generated_Source\PSoC5/ShiftReg_output.c ****     interruptState = CyEnterCriticalSection();
 239              		.loc 1 163 0
 240 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 241 000a 0346     		mov	r3, r0
 242 000c FB71     		strb	r3, [r7, #7]
 164:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_AUX_CONTROL &= ((uint8) ~ShiftReg_output_INTERRUPTS_ENABLE);
 243              		.loc 1 164 0
 244 000e 46F29753 		movw	r3, #26007
 245 0012 C4F20003 		movt	r3, 16384
 246 0016 46F29752 		movw	r2, #26007
 247 001a C4F20002 		movt	r2, 16384
 248 001e 1278     		ldrb	r2, [r2, #0]
 249 0020 D2B2     		uxtb	r2, r2
 250 0022 22F01002 		bic	r2, r2, #16
 251 0026 D2B2     		uxtb	r2, r2
 252 0028 1A70     		strb	r2, [r3, #0]
 165:.\Generated_Source\PSoC5/ShiftReg_output.c ****     CyExitCriticalSection(interruptState);
 253              		.loc 1 165 0
 254 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 255 002c 1846     		mov	r0, r3
 256 002e FFF7FEFF 		bl	CyExitCriticalSection
 166:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 257              		.loc 1 166 0
 258 0032 07F10807 		add	r7, r7, #8
 259 0036 BD46     		mov	sp, r7
 260 0038 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE5:
 263              		.size	ShiftReg_output_DisableInt, .-ShiftReg_output_DisableInt
 264 003a 00BF     		.section	.text.ShiftReg_output_GetFIFOStatus,"ax",%progbits
 265              		.align	2
 266              		.global	ShiftReg_output_GetFIFOStatus
 267              		.thumb
 268              		.thumb_func
 269              		.type	ShiftReg_output_GetFIFOStatus, %function
 270              	ShiftReg_output_GetFIFOStatus:
 271              	.LFB6:
 167:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 168:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 169:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 170:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_GetFIFOStatus
 171:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 172:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 173:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 174:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Returns current status of input or output FIFO.
 175:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 176:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 177:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  fifoId.
 178:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 179:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 180:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  FIFO status.
 181:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 182:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/ShiftReg_output.c **** uint8 ShiftReg_output_GetFIFOStatus(uint8 fifoId) 
 184:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 272              		.loc 1 184 0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 9


 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 16
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0000 80B4     		push	{r7}
 278              	.LCFI14:
 279              		.cfi_def_cfa_offset 4
 280              		.cfi_offset 7, -4
 281 0002 85B0     		sub	sp, sp, #20
 282              	.LCFI15:
 283              		.cfi_def_cfa_offset 24
 284 0004 00AF     		add	r7, sp, #0
 285              	.LCFI16:
 286              		.cfi_def_cfa_register 7
 287 0006 0346     		mov	r3, r0
 288 0008 FB71     		strb	r3, [r7, #7]
 185:.\Generated_Source\PSoC5/ShiftReg_output.c ****     uint8 result;
 186:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 187:.\Generated_Source\PSoC5/ShiftReg_output.c ****     result = ShiftReg_output_RET_FIFO_NOT_DEFINED;
 289              		.loc 1 187 0
 290 000a 4FF0FE03 		mov	r3, #254
 291 000e FB73     		strb	r3, [r7, #15]
 188:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 189:.\Generated_Source\PSoC5/ShiftReg_output.c ****     #if(0u != ShiftReg_output_USE_INPUT_FIFO)
 190:.\Generated_Source\PSoC5/ShiftReg_output.c ****         if(ShiftReg_output_IN_FIFO == fifoId)
 191:.\Generated_Source\PSoC5/ShiftReg_output.c ****         {
 192:.\Generated_Source\PSoC5/ShiftReg_output.c ****             switch(ShiftReg_output_GET_IN_FIFO_STS)
 193:.\Generated_Source\PSoC5/ShiftReg_output.c ****             {
 194:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 case ShiftReg_output_IN_FIFO_FULL :
 195:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     result = ShiftReg_output_RET_FIFO_FULL;
 196:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     break;
 197:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 198:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 case ShiftReg_output_IN_FIFO_EMPTY :
 199:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     result = ShiftReg_output_RET_FIFO_EMPTY;
 200:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     break;
 201:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 202:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 case ShiftReg_output_IN_FIFO_PARTIAL:
 203:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     result = ShiftReg_output_RET_FIFO_PARTIAL;
 204:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     break;
 205:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     
 206:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 default:
 207:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     /* Initial result value, while 
 208:.\Generated_Source\PSoC5/ShiftReg_output.c ****                        IN_FIFO_EMPTY case is false 
 209:.\Generated_Source\PSoC5/ShiftReg_output.c ****                      */
 210:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     result = ShiftReg_output_RET_FIFO_EMPTY;
 211:.\Generated_Source\PSoC5/ShiftReg_output.c ****                     break;
 212:.\Generated_Source\PSoC5/ShiftReg_output.c ****             }   
 213:.\Generated_Source\PSoC5/ShiftReg_output.c ****         }
 214:.\Generated_Source\PSoC5/ShiftReg_output.c ****     #endif /* (0u != ShiftReg_output_USE_INPUT_FIFO) */
 215:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 216:.\Generated_Source\PSoC5/ShiftReg_output.c ****     if(ShiftReg_output_OUT_FIFO == fifoId)
 292              		.loc 1 216 0
 293 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 294 0012 022B     		cmp	r3, #2
 295 0014 20D1     		bne	.L9
 217:.\Generated_Source\PSoC5/ShiftReg_output.c ****     {
 218:.\Generated_Source\PSoC5/ShiftReg_output.c ****         switch(ShiftReg_output_GET_OUT_FIFO_STS)
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 10


 296              		.loc 1 218 0
 297 0016 46F26753 		movw	r3, #25959
 298 001a C4F20003 		movt	r3, 16384
 299 001e 1B78     		ldrb	r3, [r3, #0]
 300 0020 DBB2     		uxtb	r3, r3
 301 0022 03F06003 		and	r3, r3, #96
 302 0026 4FEA5313 		lsr	r3, r3, #5
 303 002a 012B     		cmp	r3, #1
 304 002c 04D0     		beq	.L12
 305 002e 012B     		cmp	r3, #1
 306 0030 06D3     		bcc	.L11
 307 0032 022B     		cmp	r3, #2
 308 0034 08D0     		beq	.L13
 309 0036 0BE0     		b	.L15
 310              	.L12:
 219:.\Generated_Source\PSoC5/ShiftReg_output.c ****         {
 220:.\Generated_Source\PSoC5/ShiftReg_output.c ****             case ShiftReg_output_OUT_FIFO_FULL :
 221:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 result = ShiftReg_output_RET_FIFO_FULL;
 311              		.loc 1 221 0
 312 0038 4FF00003 		mov	r3, #0
 313 003c FB73     		strb	r3, [r7, #15]
 222:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 break;
 314              		.loc 1 222 0
 315 003e 0BE0     		b	.L9
 316              	.L11:
 223:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 224:.\Generated_Source\PSoC5/ShiftReg_output.c ****             case ShiftReg_output_OUT_FIFO_EMPTY :
 225:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 result = ShiftReg_output_RET_FIFO_EMPTY;
 317              		.loc 1 225 0
 318 0040 4FF00203 		mov	r3, #2
 319 0044 FB73     		strb	r3, [r7, #15]
 226:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 break;
 320              		.loc 1 226 0
 321 0046 07E0     		b	.L9
 322              	.L13:
 227:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 228:.\Generated_Source\PSoC5/ShiftReg_output.c ****             case ShiftReg_output_OUT_FIFO_PARTIAL :
 229:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 result = ShiftReg_output_RET_FIFO_PARTIAL;
 323              		.loc 1 229 0
 324 0048 4FF00103 		mov	r3, #1
 325 004c FB73     		strb	r3, [r7, #15]
 230:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 break;
 326              		.loc 1 230 0
 327 004e 03E0     		b	.L9
 328              	.L15:
 231:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 232:.\Generated_Source\PSoC5/ShiftReg_output.c ****             default:
 233:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 /* Initial result value, while 
 234:.\Generated_Source\PSoC5/ShiftReg_output.c ****                    OUT_FIFO_FULL case is false 
 235:.\Generated_Source\PSoC5/ShiftReg_output.c ****                  */
 236:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 result = ShiftReg_output_RET_FIFO_FULL;
 329              		.loc 1 236 0
 330 0050 4FF00003 		mov	r3, #0
 331 0054 FB73     		strb	r3, [r7, #15]
 237:.\Generated_Source\PSoC5/ShiftReg_output.c ****                 break;
 332              		.loc 1 237 0
 333 0056 00BF     		nop
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 11


 334              	.L9:
 238:.\Generated_Source\PSoC5/ShiftReg_output.c ****         }
 239:.\Generated_Source\PSoC5/ShiftReg_output.c ****     }
 240:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 241:.\Generated_Source\PSoC5/ShiftReg_output.c ****     return(result);
 335              		.loc 1 241 0
 336 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 242:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 337              		.loc 1 242 0
 338 005a 1846     		mov	r0, r3
 339 005c 07F11407 		add	r7, r7, #20
 340 0060 BD46     		mov	sp, r7
 341 0062 80BC     		pop	{r7}
 342 0064 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE6:
 345              		.size	ShiftReg_output_GetFIFOStatus, .-ShiftReg_output_GetFIFOStatus
 346 0066 00BF     		.section	.text.ShiftReg_output_SetIntMode,"ax",%progbits
 347              		.align	2
 348              		.global	ShiftReg_output_SetIntMode
 349              		.thumb
 350              		.thumb_func
 351              		.type	ShiftReg_output_SetIntMode, %function
 352              	ShiftReg_output_SetIntMode:
 353              	.LFB7:
 243:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 244:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 245:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 246:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_SetIntMode
 247:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 248:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 249:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 250:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Sets the Interrupt Source for the Shift Register interrupt. Multiple
 251:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  sources may be ORed together
 252:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 253:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 254:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  interruptSource: Byte containing the constant for the selected interrupt
 255:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  source/s.
 256:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 257:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 258:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 259:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 260:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_SetIntMode(uint8 interruptSource) 
 262:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 354              		.loc 1 262 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 8
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 80B4     		push	{r7}
 360              	.LCFI17:
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              	.LCFI18:
 365              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 12


 366 0004 00AF     		add	r7, sp, #0
 367              	.LCFI19:
 368              		.cfi_def_cfa_register 7
 369 0006 0346     		mov	r3, r0
 370 0008 FB71     		strb	r3, [r7, #7]
 263:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_STATUS_MASK &= ((uint8) ~ShiftReg_output_INTS_EN_MASK);          /* Clear ex
 371              		.loc 1 263 0
 372 000a 46F28753 		movw	r3, #25991
 373 000e C4F20003 		movt	r3, 16384
 374 0012 46F28752 		movw	r2, #25991
 375 0016 C4F20002 		movt	r2, 16384
 376 001a 1278     		ldrb	r2, [r2, #0]
 377 001c D2B2     		uxtb	r2, r2
 378 001e 22F00702 		bic	r2, r2, #7
 379 0022 D2B2     		uxtb	r2, r2
 380 0024 1A70     		strb	r2, [r3, #0]
 264:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ShiftReg_output_SR_STATUS_MASK |= (interruptSource & ShiftReg_output_INTS_EN_MASK); /* Set int 
 381              		.loc 1 264 0
 382 0026 46F28753 		movw	r3, #25991
 383 002a C4F20003 		movt	r3, 16384
 384 002e 46F28752 		movw	r2, #25991
 385 0032 C4F20002 		movt	r2, 16384
 386 0036 1278     		ldrb	r2, [r2, #0]
 387 0038 D1B2     		uxtb	r1, r2
 388 003a FA79     		ldrb	r2, [r7, #7]
 389 003c 02F00702 		and	r2, r2, #7
 390 0040 D2B2     		uxtb	r2, r2
 391 0042 0A43     		orrs	r2, r2, r1
 392 0044 D2B2     		uxtb	r2, r2
 393 0046 1A70     		strb	r2, [r3, #0]
 265:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 394              		.loc 1 265 0
 395 0048 07F10C07 		add	r7, r7, #12
 396 004c BD46     		mov	sp, r7
 397 004e 80BC     		pop	{r7}
 398 0050 7047     		bx	lr
 399              		.cfi_endproc
 400              	.LFE7:
 401              		.size	ShiftReg_output_SetIntMode, .-ShiftReg_output_SetIntMode
 402 0052 00BF     		.section	.text.ShiftReg_output_GetIntStatus,"ax",%progbits
 403              		.align	2
 404              		.global	ShiftReg_output_GetIntStatus
 405              		.thumb
 406              		.thumb_func
 407              		.type	ShiftReg_output_GetIntStatus, %function
 408              	ShiftReg_output_GetIntStatus:
 409              	.LFB8:
 266:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 267:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 268:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_GetIntStatus
 270:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 271:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 272:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 273:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Gets the Shift Register Interrupt status.
 274:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 275:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 13


 276:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 277:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 278:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 279:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Byte containing the constant for the selected interrupt source/s.
 280:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 281:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 282:.\Generated_Source\PSoC5/ShiftReg_output.c **** uint8 ShiftReg_output_GetIntStatus(void) 
 283:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 410              		.loc 1 283 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415 0000 80B4     		push	{r7}
 416              	.LCFI20:
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 0002 00AF     		add	r7, sp, #0
 420              	.LCFI21:
 421              		.cfi_def_cfa_register 7
 284:.\Generated_Source\PSoC5/ShiftReg_output.c ****     return(ShiftReg_output_SR_STATUS & ShiftReg_output_INTS_EN_MASK);
 422              		.loc 1 284 0
 423 0004 46F26753 		movw	r3, #25959
 424 0008 C4F20003 		movt	r3, 16384
 425 000c 1B78     		ldrb	r3, [r3, #0]
 426 000e DBB2     		uxtb	r3, r3
 427 0010 03F00703 		and	r3, r3, #7
 428 0014 DBB2     		uxtb	r3, r3
 285:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 429              		.loc 1 285 0
 430 0016 1846     		mov	r0, r3
 431 0018 BD46     		mov	sp, r7
 432 001a 80BC     		pop	{r7}
 433 001c 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE8:
 436              		.size	ShiftReg_output_GetIntStatus, .-ShiftReg_output_GetIntStatus
 437 001e 00BF     		.section	.text.ShiftReg_output_WriteRegValue,"ax",%progbits
 438              		.align	2
 439              		.global	ShiftReg_output_WriteRegValue
 440              		.thumb
 441              		.thumb_func
 442              		.type	ShiftReg_output_WriteRegValue, %function
 443              	ShiftReg_output_WriteRegValue:
 444              	.LFB9:
 286:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 287:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 288:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 289:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_WriteRegValue
 290:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 291:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 292:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 293:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Send state directly to shift register
 294:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 295:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 296:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  shiftData: containing shift register state.
 297:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 14


 298:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 299:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 300:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 301:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/ShiftReg_output.c **** void ShiftReg_output_WriteRegValue(uint32 shiftData)
 303:.\Generated_Source\PSoC5/ShiftReg_output.c ****                                                                      
 304:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 445              		.loc 1 304 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0000 80B4     		push	{r7}
 451              	.LCFI22:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              	.LCFI23:
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI24:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 305:.\Generated_Source\PSoC5/ShiftReg_output.c ****     CY_SET_REG32(ShiftReg_output_SHIFT_REG_LSB_PTR, shiftData);
 461              		.loc 1 305 0
 462 0008 46F20453 		movw	r3, #25860
 463 000c C4F20003 		movt	r3, 16384
 464 0010 7A68     		ldr	r2, [r7, #4]
 465 0012 1A60     		str	r2, [r3, #0]
 306:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 466              		.loc 1 306 0
 467 0014 07F10C07 		add	r7, r7, #12
 468 0018 BD46     		mov	sp, r7
 469 001a 80BC     		pop	{r7}
 470 001c 7047     		bx	lr
 471              		.cfi_endproc
 472              	.LFE9:
 473              		.size	ShiftReg_output_WriteRegValue, .-ShiftReg_output_WriteRegValue
 474 001e 00BF     		.section	.text.ShiftReg_output_ReadRegValue,"ax",%progbits
 475              		.align	2
 476              		.global	ShiftReg_output_ReadRegValue
 477              		.thumb
 478              		.thumb_func
 479              		.type	ShiftReg_output_ReadRegValue, %function
 480              	ShiftReg_output_ReadRegValue:
 481              	.LFB10:
 307:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 308:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 309:.\Generated_Source\PSoC5/ShiftReg_output.c **** #if(0u != ShiftReg_output_USE_INPUT_FIFO)
 310:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Function Name: ShiftReg_output_WriteData
 312:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 314:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Summary:
 315:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  Send state to FIFO for later transfer to shift register based on the Load
 316:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  input
 317:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 15


 318:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Parameters:
 319:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  shiftData: containing shift register state.
 320:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 321:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Return:
 322:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  Indicates: successful execution of function
 323:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  when FIFO is empty; and error when FIFO is full.
 324:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 325:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Reentrant:
 326:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  No.
 327:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 328:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *******************************************************************************/
 329:.\Generated_Source\PSoC5/ShiftReg_output.c ****     cystatus ShiftReg_output_WriteData(uint32 shiftData)
 330:.\Generated_Source\PSoC5/ShiftReg_output.c ****                                                                          
 331:.\Generated_Source\PSoC5/ShiftReg_output.c ****     {
 332:.\Generated_Source\PSoC5/ShiftReg_output.c ****         cystatus result;
 333:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 334:.\Generated_Source\PSoC5/ShiftReg_output.c ****         result = CYRET_INVALID_STATE;
 335:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 336:.\Generated_Source\PSoC5/ShiftReg_output.c ****         /* Writes data into the input FIFO if it is not FULL */
 337:.\Generated_Source\PSoC5/ShiftReg_output.c ****         if(ShiftReg_output_RET_FIFO_FULL != (ShiftReg_output_GetFIFOStatus(ShiftReg_output_IN_FIFO)
 338:.\Generated_Source\PSoC5/ShiftReg_output.c ****         {
 339:.\Generated_Source\PSoC5/ShiftReg_output.c ****             CY_SET_REG32(ShiftReg_output_IN_FIFO_VAL_LSB_PTR, shiftData);
 340:.\Generated_Source\PSoC5/ShiftReg_output.c ****             result = CYRET_SUCCESS;
 341:.\Generated_Source\PSoC5/ShiftReg_output.c ****         }
 342:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 343:.\Generated_Source\PSoC5/ShiftReg_output.c ****         return(result);
 344:.\Generated_Source\PSoC5/ShiftReg_output.c ****     }
 345:.\Generated_Source\PSoC5/ShiftReg_output.c **** #endif /* (0u != ShiftReg_output_USE_INPUT_FIFO) */
 346:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 347:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 348:.\Generated_Source\PSoC5/ShiftReg_output.c **** #if(0u != ShiftReg_output_USE_OUTPUT_FIFO)
 349:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /*******************************************************************************
 350:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Function Name: ShiftReg_output_ReadData
 351:.\Generated_Source\PSoC5/ShiftReg_output.c ****     ********************************************************************************
 352:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 353:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Summary:
 354:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  Returns state in FIFO due to Store input.
 355:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 356:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Parameters:
 357:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  None.
 358:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 359:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Return:
 360:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  Shift Register state
 361:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 362:.\Generated_Source\PSoC5/ShiftReg_output.c ****     * Reentrant:
 363:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *  No.
 364:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *
 365:.\Generated_Source\PSoC5/ShiftReg_output.c ****     *******************************************************************************/
 366:.\Generated_Source\PSoC5/ShiftReg_output.c ****     uint32 ShiftReg_output_ReadData(void) 
 367:.\Generated_Source\PSoC5/ShiftReg_output.c ****     {
 368:.\Generated_Source\PSoC5/ShiftReg_output.c ****         return(CY_GET_REG32(ShiftReg_output_OUT_FIFO_VAL_LSB_PTR));
 369:.\Generated_Source\PSoC5/ShiftReg_output.c ****     }
 370:.\Generated_Source\PSoC5/ShiftReg_output.c **** #endif /* (0u != ShiftReg_output_USE_OUTPUT_FIFO) */
 371:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 372:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 373:.\Generated_Source\PSoC5/ShiftReg_output.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Function Name: ShiftReg_output_ReadRegValue
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 16


 375:.\Generated_Source\PSoC5/ShiftReg_output.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 377:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Summary:
 378:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Directly returns current state in shift register, not data in FIFO due
 379:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  to Store input.
 380:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 381:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Parameters:
 382:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  None.
 383:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 384:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Return:
 385:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  Shift Register state. Clears output FIFO.
 386:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 387:.\Generated_Source\PSoC5/ShiftReg_output.c **** * Reentrant:
 388:.\Generated_Source\PSoC5/ShiftReg_output.c **** *  No.
 389:.\Generated_Source\PSoC5/ShiftReg_output.c **** *
 390:.\Generated_Source\PSoC5/ShiftReg_output.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC5/ShiftReg_output.c **** uint32 ShiftReg_output_ReadRegValue(void) 
 392:.\Generated_Source\PSoC5/ShiftReg_output.c **** {
 482              		.loc 1 392 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486 0000 80B5     		push	{r7, lr}
 487              	.LCFI25:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 82B0     		sub	sp, sp, #8
 492              	.LCFI26:
 493              		.cfi_def_cfa_offset 16
 494 0004 00AF     		add	r7, sp, #0
 495              	.LCFI27:
 496              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC5/ShiftReg_output.c ****     uint32 result;
 394:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 395:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /* Clear FIFO before software capture */
 396:.\Generated_Source\PSoC5/ShiftReg_output.c ****     while(ShiftReg_output_RET_FIFO_EMPTY != ShiftReg_output_GetFIFOStatus(ShiftReg_output_OUT_FIFO)
 497              		.loc 1 396 0
 498 0006 04E0     		b	.L21
 499              	.L22:
 397:.\Generated_Source\PSoC5/ShiftReg_output.c ****     {
 398:.\Generated_Source\PSoC5/ShiftReg_output.c ****         (void) CY_GET_REG32(ShiftReg_output_OUT_FIFO_VAL_LSB_PTR);
 500              		.loc 1 398 0
 501 0008 46F25453 		movw	r3, #25940
 502 000c C4F20003 		movt	r3, 16384
 503 0010 1B68     		ldr	r3, [r3, #0]
 504              	.L21:
 396:.\Generated_Source\PSoC5/ShiftReg_output.c ****     while(ShiftReg_output_RET_FIFO_EMPTY != ShiftReg_output_GetFIFOStatus(ShiftReg_output_OUT_FIFO)
 505              		.loc 1 396 0 discriminator 1
 506 0012 4FF00200 		mov	r0, #2
 507 0016 FFF7FEFF 		bl	ShiftReg_output_GetFIFOStatus
 508 001a 0346     		mov	r3, r0
 509 001c 022B     		cmp	r3, #2
 510 001e F3D1     		bne	.L22
 399:.\Generated_Source\PSoC5/ShiftReg_output.c ****     }
 400:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 401:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /* Read of 8 bits from A1 causes capture to output FIFO */
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 17


 402:.\Generated_Source\PSoC5/ShiftReg_output.c ****     (void) CY_GET_REG8(ShiftReg_output_SHIFT_REG_CAPTURE_PTR);
 511              		.loc 1 402 0
 512 0020 46F21453 		movw	r3, #25876
 513 0024 C4F20003 		movt	r3, 16384
 514 0028 1B78     		ldrb	r3, [r3, #0]
 403:.\Generated_Source\PSoC5/ShiftReg_output.c **** 
 404:.\Generated_Source\PSoC5/ShiftReg_output.c ****     /* Read output FIFO */
 405:.\Generated_Source\PSoC5/ShiftReg_output.c ****     result  = CY_GET_REG32(ShiftReg_output_OUT_FIFO_VAL_LSB_PTR);
 515              		.loc 1 405 0
 516 002a 46F25453 		movw	r3, #25940
 517 002e C4F20003 		movt	r3, 16384
 518 0032 1B68     		ldr	r3, [r3, #0]
 519 0034 7B60     		str	r3, [r7, #4]
 406:.\Generated_Source\PSoC5/ShiftReg_output.c ****     
 407:.\Generated_Source\PSoC5/ShiftReg_output.c ****     #if(0u != (ShiftReg_output_SR_SIZE % 8u))
 408:.\Generated_Source\PSoC5/ShiftReg_output.c ****         result &= ((uint32) ShiftReg_output_SR_MASK);
 409:.\Generated_Source\PSoC5/ShiftReg_output.c ****     #endif /* (0u != (ShiftReg_output_SR_SIZE % 8u)) */
 410:.\Generated_Source\PSoC5/ShiftReg_output.c ****     
 411:.\Generated_Source\PSoC5/ShiftReg_output.c ****     return(result);
 520              		.loc 1 411 0
 521 0036 7B68     		ldr	r3, [r7, #4]
 412:.\Generated_Source\PSoC5/ShiftReg_output.c **** }
 522              		.loc 1 412 0
 523 0038 1846     		mov	r0, r3
 524 003a 07F10807 		add	r7, r7, #8
 525 003e BD46     		mov	sp, r7
 526 0040 80BD     		pop	{r7, pc}
 527              		.cfi_endproc
 528              	.LFE10:
 529              		.size	ShiftReg_output_ReadRegValue, .-ShiftReg_output_ReadRegValue
 530 0042 00BF     		.text
 531              	.Letext0:
 532              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 533              		.section	.debug_info,"",%progbits
 534              	.Ldebug_info0:
 535 0000 55020000 		.4byte	0x255
 536 0004 0200     		.2byte	0x2
 537 0006 00000000 		.4byte	.Ldebug_abbrev0
 538 000a 04       		.byte	0x4
 539 000b 01       		.uleb128 0x1
 540 000c 80020000 		.4byte	.LASF32
 541 0010 01       		.byte	0x1
 542 0011 37020000 		.4byte	.LASF33
 543 0015 84010000 		.4byte	.LASF34
 544 0019 00000000 		.4byte	.Ldebug_ranges0+0
 545 001d 00000000 		.4byte	0
 546 0021 00000000 		.4byte	0
 547 0025 00000000 		.4byte	.Ldebug_line0
 548 0029 02       		.uleb128 0x2
 549 002a 01       		.byte	0x1
 550 002b 06       		.byte	0x6
 551 002c D2020000 		.4byte	.LASF0
 552 0030 02       		.uleb128 0x2
 553 0031 01       		.byte	0x1
 554 0032 08       		.byte	0x8
 555 0033 8A000000 		.4byte	.LASF1
 556 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 18


 557 0038 02       		.byte	0x2
 558 0039 05       		.byte	0x5
 559 003a 7A000000 		.4byte	.LASF2
 560 003e 02       		.uleb128 0x2
 561 003f 02       		.byte	0x2
 562 0040 07       		.byte	0x7
 563 0041 67000000 		.4byte	.LASF3
 564 0045 02       		.uleb128 0x2
 565 0046 04       		.byte	0x4
 566 0047 05       		.byte	0x5
 567 0048 C9020000 		.4byte	.LASF4
 568 004c 02       		.uleb128 0x2
 569 004d 04       		.byte	0x4
 570 004e 07       		.byte	0x7
 571 004f C2000000 		.4byte	.LASF5
 572 0053 02       		.uleb128 0x2
 573 0054 08       		.byte	0x8
 574 0055 05       		.byte	0x5
 575 0056 24020000 		.4byte	.LASF6
 576 005a 02       		.uleb128 0x2
 577 005b 08       		.byte	0x8
 578 005c 07       		.byte	0x7
 579 005d FD010000 		.4byte	.LASF7
 580 0061 03       		.uleb128 0x3
 581 0062 04       		.byte	0x4
 582 0063 05       		.byte	0x5
 583 0064 696E7400 		.ascii	"int\000"
 584 0068 02       		.uleb128 0x2
 585 0069 04       		.byte	0x4
 586 006a 07       		.byte	0x7
 587 006b F0010000 		.4byte	.LASF8
 588 006f 04       		.uleb128 0x4
 589 0070 D4000000 		.4byte	.LASF9
 590 0074 02       		.byte	0x2
 591 0075 5B       		.byte	0x5b
 592 0076 30000000 		.4byte	0x30
 593 007a 04       		.uleb128 0x4
 594 007b E9010000 		.4byte	.LASF10
 595 007f 02       		.byte	0x2
 596 0080 5D       		.byte	0x5d
 597 0081 4C000000 		.4byte	0x4c
 598 0085 02       		.uleb128 0x2
 599 0086 04       		.byte	0x4
 600 0087 04       		.byte	0x4
 601 0088 84000000 		.4byte	.LASF11
 602 008c 02       		.uleb128 0x2
 603 008d 08       		.byte	0x8
 604 008e 04       		.byte	0x4
 605 008f 13010000 		.4byte	.LASF12
 606 0093 02       		.uleb128 0x2
 607 0094 01       		.byte	0x1
 608 0095 08       		.byte	0x8
 609 0096 32020000 		.4byte	.LASF13
 610 009a 04       		.uleb128 0x4
 611 009b 98000000 		.4byte	.LASF14
 612 009f 02       		.byte	0x2
 613 00a0 F0       		.byte	0xf0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 19


 614 00a1 A5000000 		.4byte	0xa5
 615 00a5 05       		.uleb128 0x5
 616 00a6 6F000000 		.4byte	0x6f
 617 00aa 04       		.uleb128 0x4
 618 00ab 1B000000 		.4byte	.LASF15
 619 00af 02       		.byte	0x2
 620 00b0 F2       		.byte	0xf2
 621 00b1 B5000000 		.4byte	0xb5
 622 00b5 05       		.uleb128 0x5
 623 00b6 7A000000 		.4byte	0x7a
 624 00ba 02       		.uleb128 0x2
 625 00bb 04       		.byte	0x4
 626 00bc 07       		.byte	0x7
 627 00bd 1B020000 		.4byte	.LASF16
 628 00c1 06       		.uleb128 0x6
 629 00c2 01       		.byte	0x1
 630 00c3 9D000000 		.4byte	.LASF17
 631 00c7 01       		.byte	0x1
 632 00c8 2B       		.byte	0x2b
 633 00c9 01       		.byte	0x1
 634 00ca 00000000 		.4byte	.LFB0
 635 00ce 2A000000 		.4byte	.LFE0
 636 00d2 00000000 		.4byte	.LLST0
 637 00d6 01       		.byte	0x1
 638 00d7 06       		.uleb128 0x6
 639 00d8 01       		.byte	0x1
 640 00d9 50000000 		.4byte	.LASF18
 641 00dd 01       		.byte	0x1
 642 00de 45       		.byte	0x45
 643 00df 01       		.byte	0x1
 644 00e0 00000000 		.4byte	.LFB1
 645 00e4 26000000 		.4byte	.LFE1
 646 00e8 2C000000 		.4byte	.LLST1
 647 00ec 01       		.byte	0x1
 648 00ed 06       		.uleb128 0x6
 649 00ee 01       		.byte	0x1
 650 00ef 21000000 		.4byte	.LASF19
 651 00f3 01       		.byte	0x1
 652 00f4 5D       		.byte	0x5d
 653 00f5 01       		.byte	0x1
 654 00f6 00000000 		.4byte	.LFB2
 655 00fa 0E000000 		.4byte	.LFE2
 656 00fe 58000000 		.4byte	.LLST2
 657 0102 01       		.byte	0x1
 658 0103 06       		.uleb128 0x6
 659 0104 01       		.byte	0x1
 660 0105 DA000000 		.4byte	.LASF20
 661 0109 01       		.byte	0x1
 662 010a 71       		.byte	0x71
 663 010b 01       		.byte	0x1
 664 010c 00000000 		.4byte	.LFB3
 665 0110 26000000 		.4byte	.LFE3
 666 0114 84000000 		.4byte	.LLST3
 667 0118 01       		.byte	0x1
 668 0119 07       		.uleb128 0x7
 669 011a 01       		.byte	0x1
 670 011b 36000000 		.4byte	.LASF21
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 20


 671 011f 01       		.byte	0x1
 672 0120 87       		.byte	0x87
 673 0121 01       		.byte	0x1
 674 0122 00000000 		.4byte	.LFB4
 675 0126 3A000000 		.4byte	.LFE4
 676 012a B0000000 		.4byte	.LLST4
 677 012e 01       		.byte	0x1
 678 012f 42010000 		.4byte	0x142
 679 0133 08       		.uleb128 0x8
 680 0134 B3000000 		.4byte	.LASF23
 681 0138 01       		.byte	0x1
 682 0139 89       		.byte	0x89
 683 013a 6F000000 		.4byte	0x6f
 684 013e 02       		.byte	0x2
 685 013f 91       		.byte	0x91
 686 0140 77       		.sleb128 -9
 687 0141 00       		.byte	0
 688 0142 07       		.uleb128 0x7
 689 0143 01       		.byte	0x1
 690 0144 4F010000 		.4byte	.LASF22
 691 0148 01       		.byte	0x1
 692 0149 9F       		.byte	0x9f
 693 014a 01       		.byte	0x1
 694 014b 00000000 		.4byte	.LFB5
 695 014f 3A000000 		.4byte	.LFE5
 696 0153 E8000000 		.4byte	.LLST5
 697 0157 01       		.byte	0x1
 698 0158 6B010000 		.4byte	0x16b
 699 015c 08       		.uleb128 0x8
 700 015d B3000000 		.4byte	.LASF23
 701 0161 01       		.byte	0x1
 702 0162 A1       		.byte	0xa1
 703 0163 6F000000 		.4byte	0x6f
 704 0167 02       		.byte	0x2
 705 0168 91       		.byte	0x91
 706 0169 77       		.sleb128 -9
 707 016a 00       		.byte	0
 708 016b 09       		.uleb128 0x9
 709 016c 01       		.byte	0x1
 710 016d 62020000 		.4byte	.LASF30
 711 0171 01       		.byte	0x1
 712 0172 B7       		.byte	0xb7
 713 0173 01       		.byte	0x1
 714 0174 6F000000 		.4byte	0x6f
 715 0178 00000000 		.4byte	.LFB6
 716 017c 66000000 		.4byte	.LFE6
 717 0180 20010000 		.4byte	.LLST6
 718 0184 01       		.byte	0x1
 719 0185 A6010000 		.4byte	0x1a6
 720 0189 0A       		.uleb128 0xa
 721 018a EF000000 		.4byte	.LASF26
 722 018e 01       		.byte	0x1
 723 018f B7       		.byte	0xb7
 724 0190 6F000000 		.4byte	0x6f
 725 0194 02       		.byte	0x2
 726 0195 91       		.byte	0x91
 727 0196 6F       		.sleb128 -17
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 21


 728 0197 08       		.uleb128 0x8
 729 0198 14020000 		.4byte	.LASF24
 730 019c 01       		.byte	0x1
 731 019d B9       		.byte	0xb9
 732 019e 6F000000 		.4byte	0x6f
 733 01a2 02       		.byte	0x2
 734 01a3 91       		.byte	0x91
 735 01a4 77       		.sleb128 -9
 736 01a5 00       		.byte	0
 737 01a6 0B       		.uleb128 0xb
 738 01a7 01       		.byte	0x1
 739 01a8 00000000 		.4byte	.LASF25
 740 01ac 01       		.byte	0x1
 741 01ad 0501     		.2byte	0x105
 742 01af 01       		.byte	0x1
 743 01b0 00000000 		.4byte	.LFB7
 744 01b4 52000000 		.4byte	.LFE7
 745 01b8 58010000 		.4byte	.LLST7
 746 01bc 01       		.byte	0x1
 747 01bd D1010000 		.4byte	0x1d1
 748 01c1 0C       		.uleb128 0xc
 749 01c2 6A010000 		.4byte	.LASF27
 750 01c6 01       		.byte	0x1
 751 01c7 0501     		.2byte	0x105
 752 01c9 6F000000 		.4byte	0x6f
 753 01cd 02       		.byte	0x2
 754 01ce 91       		.byte	0x91
 755 01cf 77       		.sleb128 -9
 756 01d0 00       		.byte	0
 757 01d1 0D       		.uleb128 0xd
 758 01d2 01       		.byte	0x1
 759 01d3 F6000000 		.4byte	.LASF35
 760 01d7 01       		.byte	0x1
 761 01d8 1A01     		.2byte	0x11a
 762 01da 01       		.byte	0x1
 763 01db 6F000000 		.4byte	0x6f
 764 01df 00000000 		.4byte	.LFB8
 765 01e3 1E000000 		.4byte	.LFE8
 766 01e7 90010000 		.4byte	.LLST8
 767 01eb 01       		.byte	0x1
 768 01ec 0B       		.uleb128 0xb
 769 01ed 01       		.byte	0x1
 770 01ee DE020000 		.4byte	.LASF28
 771 01f2 01       		.byte	0x1
 772 01f3 2E01     		.2byte	0x12e
 773 01f5 01       		.byte	0x1
 774 01f6 00000000 		.4byte	.LFB9
 775 01fa 1E000000 		.4byte	.LFE9
 776 01fe BC010000 		.4byte	.LLST9
 777 0202 01       		.byte	0x1
 778 0203 17020000 		.4byte	0x217
 779 0207 0C       		.uleb128 0xc
 780 0208 7A010000 		.4byte	.LASF29
 781 020c 01       		.byte	0x1
 782 020d 2E01     		.2byte	0x12e
 783 020f 7A000000 		.4byte	0x7a
 784 0213 02       		.byte	0x2
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 22


 785 0214 91       		.byte	0x91
 786 0215 74       		.sleb128 -12
 787 0216 00       		.byte	0
 788 0217 0E       		.uleb128 0xe
 789 0218 01       		.byte	0x1
 790 0219 1A010000 		.4byte	.LASF31
 791 021d 01       		.byte	0x1
 792 021e 8701     		.2byte	0x187
 793 0220 01       		.byte	0x1
 794 0221 7A000000 		.4byte	0x7a
 795 0225 00000000 		.4byte	.LFB10
 796 0229 42000000 		.4byte	.LFE10
 797 022d F4010000 		.4byte	.LLST10
 798 0231 01       		.byte	0x1
 799 0232 46020000 		.4byte	0x246
 800 0236 0F       		.uleb128 0xf
 801 0237 14020000 		.4byte	.LASF24
 802 023b 01       		.byte	0x1
 803 023c 8901     		.2byte	0x189
 804 023e 7A000000 		.4byte	0x7a
 805 0242 02       		.byte	0x2
 806 0243 91       		.byte	0x91
 807 0244 74       		.sleb128 -12
 808 0245 00       		.byte	0
 809 0246 10       		.uleb128 0x10
 810 0247 37010000 		.4byte	.LASF36
 811 024b 01       		.byte	0x1
 812 024c 13       		.byte	0x13
 813 024d 6F000000 		.4byte	0x6f
 814 0251 01       		.byte	0x1
 815 0252 05       		.byte	0x5
 816 0253 03       		.byte	0x3
 817 0254 00000000 		.4byte	ShiftReg_output_initVar
 818 0258 00       		.byte	0
 819              		.section	.debug_abbrev,"",%progbits
 820              	.Ldebug_abbrev0:
 821 0000 01       		.uleb128 0x1
 822 0001 11       		.uleb128 0x11
 823 0002 01       		.byte	0x1
 824 0003 25       		.uleb128 0x25
 825 0004 0E       		.uleb128 0xe
 826 0005 13       		.uleb128 0x13
 827 0006 0B       		.uleb128 0xb
 828 0007 03       		.uleb128 0x3
 829 0008 0E       		.uleb128 0xe
 830 0009 1B       		.uleb128 0x1b
 831 000a 0E       		.uleb128 0xe
 832 000b 55       		.uleb128 0x55
 833 000c 06       		.uleb128 0x6
 834 000d 11       		.uleb128 0x11
 835 000e 01       		.uleb128 0x1
 836 000f 52       		.uleb128 0x52
 837 0010 01       		.uleb128 0x1
 838 0011 10       		.uleb128 0x10
 839 0012 06       		.uleb128 0x6
 840 0013 00       		.byte	0
 841 0014 00       		.byte	0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 23


 842 0015 02       		.uleb128 0x2
 843 0016 24       		.uleb128 0x24
 844 0017 00       		.byte	0
 845 0018 0B       		.uleb128 0xb
 846 0019 0B       		.uleb128 0xb
 847 001a 3E       		.uleb128 0x3e
 848 001b 0B       		.uleb128 0xb
 849 001c 03       		.uleb128 0x3
 850 001d 0E       		.uleb128 0xe
 851 001e 00       		.byte	0
 852 001f 00       		.byte	0
 853 0020 03       		.uleb128 0x3
 854 0021 24       		.uleb128 0x24
 855 0022 00       		.byte	0
 856 0023 0B       		.uleb128 0xb
 857 0024 0B       		.uleb128 0xb
 858 0025 3E       		.uleb128 0x3e
 859 0026 0B       		.uleb128 0xb
 860 0027 03       		.uleb128 0x3
 861 0028 08       		.uleb128 0x8
 862 0029 00       		.byte	0
 863 002a 00       		.byte	0
 864 002b 04       		.uleb128 0x4
 865 002c 16       		.uleb128 0x16
 866 002d 00       		.byte	0
 867 002e 03       		.uleb128 0x3
 868 002f 0E       		.uleb128 0xe
 869 0030 3A       		.uleb128 0x3a
 870 0031 0B       		.uleb128 0xb
 871 0032 3B       		.uleb128 0x3b
 872 0033 0B       		.uleb128 0xb
 873 0034 49       		.uleb128 0x49
 874 0035 13       		.uleb128 0x13
 875 0036 00       		.byte	0
 876 0037 00       		.byte	0
 877 0038 05       		.uleb128 0x5
 878 0039 35       		.uleb128 0x35
 879 003a 00       		.byte	0
 880 003b 49       		.uleb128 0x49
 881 003c 13       		.uleb128 0x13
 882 003d 00       		.byte	0
 883 003e 00       		.byte	0
 884 003f 06       		.uleb128 0x6
 885 0040 2E       		.uleb128 0x2e
 886 0041 00       		.byte	0
 887 0042 3F       		.uleb128 0x3f
 888 0043 0C       		.uleb128 0xc
 889 0044 03       		.uleb128 0x3
 890 0045 0E       		.uleb128 0xe
 891 0046 3A       		.uleb128 0x3a
 892 0047 0B       		.uleb128 0xb
 893 0048 3B       		.uleb128 0x3b
 894 0049 0B       		.uleb128 0xb
 895 004a 27       		.uleb128 0x27
 896 004b 0C       		.uleb128 0xc
 897 004c 11       		.uleb128 0x11
 898 004d 01       		.uleb128 0x1
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 24


 899 004e 12       		.uleb128 0x12
 900 004f 01       		.uleb128 0x1
 901 0050 40       		.uleb128 0x40
 902 0051 06       		.uleb128 0x6
 903 0052 9642     		.uleb128 0x2116
 904 0054 0C       		.uleb128 0xc
 905 0055 00       		.byte	0
 906 0056 00       		.byte	0
 907 0057 07       		.uleb128 0x7
 908 0058 2E       		.uleb128 0x2e
 909 0059 01       		.byte	0x1
 910 005a 3F       		.uleb128 0x3f
 911 005b 0C       		.uleb128 0xc
 912 005c 03       		.uleb128 0x3
 913 005d 0E       		.uleb128 0xe
 914 005e 3A       		.uleb128 0x3a
 915 005f 0B       		.uleb128 0xb
 916 0060 3B       		.uleb128 0x3b
 917 0061 0B       		.uleb128 0xb
 918 0062 27       		.uleb128 0x27
 919 0063 0C       		.uleb128 0xc
 920 0064 11       		.uleb128 0x11
 921 0065 01       		.uleb128 0x1
 922 0066 12       		.uleb128 0x12
 923 0067 01       		.uleb128 0x1
 924 0068 40       		.uleb128 0x40
 925 0069 06       		.uleb128 0x6
 926 006a 9642     		.uleb128 0x2116
 927 006c 0C       		.uleb128 0xc
 928 006d 01       		.uleb128 0x1
 929 006e 13       		.uleb128 0x13
 930 006f 00       		.byte	0
 931 0070 00       		.byte	0
 932 0071 08       		.uleb128 0x8
 933 0072 34       		.uleb128 0x34
 934 0073 00       		.byte	0
 935 0074 03       		.uleb128 0x3
 936 0075 0E       		.uleb128 0xe
 937 0076 3A       		.uleb128 0x3a
 938 0077 0B       		.uleb128 0xb
 939 0078 3B       		.uleb128 0x3b
 940 0079 0B       		.uleb128 0xb
 941 007a 49       		.uleb128 0x49
 942 007b 13       		.uleb128 0x13
 943 007c 02       		.uleb128 0x2
 944 007d 0A       		.uleb128 0xa
 945 007e 00       		.byte	0
 946 007f 00       		.byte	0
 947 0080 09       		.uleb128 0x9
 948 0081 2E       		.uleb128 0x2e
 949 0082 01       		.byte	0x1
 950 0083 3F       		.uleb128 0x3f
 951 0084 0C       		.uleb128 0xc
 952 0085 03       		.uleb128 0x3
 953 0086 0E       		.uleb128 0xe
 954 0087 3A       		.uleb128 0x3a
 955 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 25


 956 0089 3B       		.uleb128 0x3b
 957 008a 0B       		.uleb128 0xb
 958 008b 27       		.uleb128 0x27
 959 008c 0C       		.uleb128 0xc
 960 008d 49       		.uleb128 0x49
 961 008e 13       		.uleb128 0x13
 962 008f 11       		.uleb128 0x11
 963 0090 01       		.uleb128 0x1
 964 0091 12       		.uleb128 0x12
 965 0092 01       		.uleb128 0x1
 966 0093 40       		.uleb128 0x40
 967 0094 06       		.uleb128 0x6
 968 0095 9742     		.uleb128 0x2117
 969 0097 0C       		.uleb128 0xc
 970 0098 01       		.uleb128 0x1
 971 0099 13       		.uleb128 0x13
 972 009a 00       		.byte	0
 973 009b 00       		.byte	0
 974 009c 0A       		.uleb128 0xa
 975 009d 05       		.uleb128 0x5
 976 009e 00       		.byte	0
 977 009f 03       		.uleb128 0x3
 978 00a0 0E       		.uleb128 0xe
 979 00a1 3A       		.uleb128 0x3a
 980 00a2 0B       		.uleb128 0xb
 981 00a3 3B       		.uleb128 0x3b
 982 00a4 0B       		.uleb128 0xb
 983 00a5 49       		.uleb128 0x49
 984 00a6 13       		.uleb128 0x13
 985 00a7 02       		.uleb128 0x2
 986 00a8 0A       		.uleb128 0xa
 987 00a9 00       		.byte	0
 988 00aa 00       		.byte	0
 989 00ab 0B       		.uleb128 0xb
 990 00ac 2E       		.uleb128 0x2e
 991 00ad 01       		.byte	0x1
 992 00ae 3F       		.uleb128 0x3f
 993 00af 0C       		.uleb128 0xc
 994 00b0 03       		.uleb128 0x3
 995 00b1 0E       		.uleb128 0xe
 996 00b2 3A       		.uleb128 0x3a
 997 00b3 0B       		.uleb128 0xb
 998 00b4 3B       		.uleb128 0x3b
 999 00b5 05       		.uleb128 0x5
 1000 00b6 27       		.uleb128 0x27
 1001 00b7 0C       		.uleb128 0xc
 1002 00b8 11       		.uleb128 0x11
 1003 00b9 01       		.uleb128 0x1
 1004 00ba 12       		.uleb128 0x12
 1005 00bb 01       		.uleb128 0x1
 1006 00bc 40       		.uleb128 0x40
 1007 00bd 06       		.uleb128 0x6
 1008 00be 9742     		.uleb128 0x2117
 1009 00c0 0C       		.uleb128 0xc
 1010 00c1 01       		.uleb128 0x1
 1011 00c2 13       		.uleb128 0x13
 1012 00c3 00       		.byte	0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 26


 1013 00c4 00       		.byte	0
 1014 00c5 0C       		.uleb128 0xc
 1015 00c6 05       		.uleb128 0x5
 1016 00c7 00       		.byte	0
 1017 00c8 03       		.uleb128 0x3
 1018 00c9 0E       		.uleb128 0xe
 1019 00ca 3A       		.uleb128 0x3a
 1020 00cb 0B       		.uleb128 0xb
 1021 00cc 3B       		.uleb128 0x3b
 1022 00cd 05       		.uleb128 0x5
 1023 00ce 49       		.uleb128 0x49
 1024 00cf 13       		.uleb128 0x13
 1025 00d0 02       		.uleb128 0x2
 1026 00d1 0A       		.uleb128 0xa
 1027 00d2 00       		.byte	0
 1028 00d3 00       		.byte	0
 1029 00d4 0D       		.uleb128 0xd
 1030 00d5 2E       		.uleb128 0x2e
 1031 00d6 00       		.byte	0
 1032 00d7 3F       		.uleb128 0x3f
 1033 00d8 0C       		.uleb128 0xc
 1034 00d9 03       		.uleb128 0x3
 1035 00da 0E       		.uleb128 0xe
 1036 00db 3A       		.uleb128 0x3a
 1037 00dc 0B       		.uleb128 0xb
 1038 00dd 3B       		.uleb128 0x3b
 1039 00de 05       		.uleb128 0x5
 1040 00df 27       		.uleb128 0x27
 1041 00e0 0C       		.uleb128 0xc
 1042 00e1 49       		.uleb128 0x49
 1043 00e2 13       		.uleb128 0x13
 1044 00e3 11       		.uleb128 0x11
 1045 00e4 01       		.uleb128 0x1
 1046 00e5 12       		.uleb128 0x12
 1047 00e6 01       		.uleb128 0x1
 1048 00e7 40       		.uleb128 0x40
 1049 00e8 06       		.uleb128 0x6
 1050 00e9 9742     		.uleb128 0x2117
 1051 00eb 0C       		.uleb128 0xc
 1052 00ec 00       		.byte	0
 1053 00ed 00       		.byte	0
 1054 00ee 0E       		.uleb128 0xe
 1055 00ef 2E       		.uleb128 0x2e
 1056 00f0 01       		.byte	0x1
 1057 00f1 3F       		.uleb128 0x3f
 1058 00f2 0C       		.uleb128 0xc
 1059 00f3 03       		.uleb128 0x3
 1060 00f4 0E       		.uleb128 0xe
 1061 00f5 3A       		.uleb128 0x3a
 1062 00f6 0B       		.uleb128 0xb
 1063 00f7 3B       		.uleb128 0x3b
 1064 00f8 05       		.uleb128 0x5
 1065 00f9 27       		.uleb128 0x27
 1066 00fa 0C       		.uleb128 0xc
 1067 00fb 49       		.uleb128 0x49
 1068 00fc 13       		.uleb128 0x13
 1069 00fd 11       		.uleb128 0x11
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 27


 1070 00fe 01       		.uleb128 0x1
 1071 00ff 12       		.uleb128 0x12
 1072 0100 01       		.uleb128 0x1
 1073 0101 40       		.uleb128 0x40
 1074 0102 06       		.uleb128 0x6
 1075 0103 9642     		.uleb128 0x2116
 1076 0105 0C       		.uleb128 0xc
 1077 0106 01       		.uleb128 0x1
 1078 0107 13       		.uleb128 0x13
 1079 0108 00       		.byte	0
 1080 0109 00       		.byte	0
 1081 010a 0F       		.uleb128 0xf
 1082 010b 34       		.uleb128 0x34
 1083 010c 00       		.byte	0
 1084 010d 03       		.uleb128 0x3
 1085 010e 0E       		.uleb128 0xe
 1086 010f 3A       		.uleb128 0x3a
 1087 0110 0B       		.uleb128 0xb
 1088 0111 3B       		.uleb128 0x3b
 1089 0112 05       		.uleb128 0x5
 1090 0113 49       		.uleb128 0x49
 1091 0114 13       		.uleb128 0x13
 1092 0115 02       		.uleb128 0x2
 1093 0116 0A       		.uleb128 0xa
 1094 0117 00       		.byte	0
 1095 0118 00       		.byte	0
 1096 0119 10       		.uleb128 0x10
 1097 011a 34       		.uleb128 0x34
 1098 011b 00       		.byte	0
 1099 011c 03       		.uleb128 0x3
 1100 011d 0E       		.uleb128 0xe
 1101 011e 3A       		.uleb128 0x3a
 1102 011f 0B       		.uleb128 0xb
 1103 0120 3B       		.uleb128 0x3b
 1104 0121 0B       		.uleb128 0xb
 1105 0122 49       		.uleb128 0x49
 1106 0123 13       		.uleb128 0x13
 1107 0124 3F       		.uleb128 0x3f
 1108 0125 0C       		.uleb128 0xc
 1109 0126 02       		.uleb128 0x2
 1110 0127 0A       		.uleb128 0xa
 1111 0128 00       		.byte	0
 1112 0129 00       		.byte	0
 1113 012a 00       		.byte	0
 1114              		.section	.debug_loc,"",%progbits
 1115              	.Ldebug_loc0:
 1116              	.LLST0:
 1117 0000 00000000 		.4byte	.LFB0
 1118 0004 02000000 		.4byte	.LCFI0
 1119 0008 0200     		.2byte	0x2
 1120 000a 7D       		.byte	0x7d
 1121 000b 00       		.sleb128 0
 1122 000c 02000000 		.4byte	.LCFI0
 1123 0010 04000000 		.4byte	.LCFI1
 1124 0014 0200     		.2byte	0x2
 1125 0016 7D       		.byte	0x7d
 1126 0017 08       		.sleb128 8
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 28


 1127 0018 04000000 		.4byte	.LCFI1
 1128 001c 2A000000 		.4byte	.LFE0
 1129 0020 0200     		.2byte	0x2
 1130 0022 77       		.byte	0x77
 1131 0023 08       		.sleb128 8
 1132 0024 00000000 		.4byte	0
 1133 0028 00000000 		.4byte	0
 1134              	.LLST1:
 1135 002c 00000000 		.4byte	.LFB1
 1136 0030 02000000 		.4byte	.LCFI2
 1137 0034 0200     		.2byte	0x2
 1138 0036 7D       		.byte	0x7d
 1139 0037 00       		.sleb128 0
 1140 0038 02000000 		.4byte	.LCFI2
 1141 003c 04000000 		.4byte	.LCFI3
 1142 0040 0200     		.2byte	0x2
 1143 0042 7D       		.byte	0x7d
 1144 0043 08       		.sleb128 8
 1145 0044 04000000 		.4byte	.LCFI3
 1146 0048 26000000 		.4byte	.LFE1
 1147 004c 0200     		.2byte	0x2
 1148 004e 77       		.byte	0x77
 1149 004f 08       		.sleb128 8
 1150 0050 00000000 		.4byte	0
 1151 0054 00000000 		.4byte	0
 1152              	.LLST2:
 1153 0058 00000000 		.4byte	.LFB2
 1154 005c 02000000 		.4byte	.LCFI4
 1155 0060 0200     		.2byte	0x2
 1156 0062 7D       		.byte	0x7d
 1157 0063 00       		.sleb128 0
 1158 0064 02000000 		.4byte	.LCFI4
 1159 0068 04000000 		.4byte	.LCFI5
 1160 006c 0200     		.2byte	0x2
 1161 006e 7D       		.byte	0x7d
 1162 006f 08       		.sleb128 8
 1163 0070 04000000 		.4byte	.LCFI5
 1164 0074 0E000000 		.4byte	.LFE2
 1165 0078 0200     		.2byte	0x2
 1166 007a 77       		.byte	0x77
 1167 007b 08       		.sleb128 8
 1168 007c 00000000 		.4byte	0
 1169 0080 00000000 		.4byte	0
 1170              	.LLST3:
 1171 0084 00000000 		.4byte	.LFB3
 1172 0088 02000000 		.4byte	.LCFI6
 1173 008c 0200     		.2byte	0x2
 1174 008e 7D       		.byte	0x7d
 1175 008f 00       		.sleb128 0
 1176 0090 02000000 		.4byte	.LCFI6
 1177 0094 04000000 		.4byte	.LCFI7
 1178 0098 0200     		.2byte	0x2
 1179 009a 7D       		.byte	0x7d
 1180 009b 08       		.sleb128 8
 1181 009c 04000000 		.4byte	.LCFI7
 1182 00a0 26000000 		.4byte	.LFE3
 1183 00a4 0200     		.2byte	0x2
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 29


 1184 00a6 77       		.byte	0x77
 1185 00a7 08       		.sleb128 8
 1186 00a8 00000000 		.4byte	0
 1187 00ac 00000000 		.4byte	0
 1188              	.LLST4:
 1189 00b0 00000000 		.4byte	.LFB4
 1190 00b4 02000000 		.4byte	.LCFI8
 1191 00b8 0200     		.2byte	0x2
 1192 00ba 7D       		.byte	0x7d
 1193 00bb 00       		.sleb128 0
 1194 00bc 02000000 		.4byte	.LCFI8
 1195 00c0 04000000 		.4byte	.LCFI9
 1196 00c4 0200     		.2byte	0x2
 1197 00c6 7D       		.byte	0x7d
 1198 00c7 08       		.sleb128 8
 1199 00c8 04000000 		.4byte	.LCFI9
 1200 00cc 06000000 		.4byte	.LCFI10
 1201 00d0 0200     		.2byte	0x2
 1202 00d2 7D       		.byte	0x7d
 1203 00d3 10       		.sleb128 16
 1204 00d4 06000000 		.4byte	.LCFI10
 1205 00d8 3A000000 		.4byte	.LFE4
 1206 00dc 0200     		.2byte	0x2
 1207 00de 77       		.byte	0x77
 1208 00df 10       		.sleb128 16
 1209 00e0 00000000 		.4byte	0
 1210 00e4 00000000 		.4byte	0
 1211              	.LLST5:
 1212 00e8 00000000 		.4byte	.LFB5
 1213 00ec 02000000 		.4byte	.LCFI11
 1214 00f0 0200     		.2byte	0x2
 1215 00f2 7D       		.byte	0x7d
 1216 00f3 00       		.sleb128 0
 1217 00f4 02000000 		.4byte	.LCFI11
 1218 00f8 04000000 		.4byte	.LCFI12
 1219 00fc 0200     		.2byte	0x2
 1220 00fe 7D       		.byte	0x7d
 1221 00ff 08       		.sleb128 8
 1222 0100 04000000 		.4byte	.LCFI12
 1223 0104 06000000 		.4byte	.LCFI13
 1224 0108 0200     		.2byte	0x2
 1225 010a 7D       		.byte	0x7d
 1226 010b 10       		.sleb128 16
 1227 010c 06000000 		.4byte	.LCFI13
 1228 0110 3A000000 		.4byte	.LFE5
 1229 0114 0200     		.2byte	0x2
 1230 0116 77       		.byte	0x77
 1231 0117 10       		.sleb128 16
 1232 0118 00000000 		.4byte	0
 1233 011c 00000000 		.4byte	0
 1234              	.LLST6:
 1235 0120 00000000 		.4byte	.LFB6
 1236 0124 02000000 		.4byte	.LCFI14
 1237 0128 0200     		.2byte	0x2
 1238 012a 7D       		.byte	0x7d
 1239 012b 00       		.sleb128 0
 1240 012c 02000000 		.4byte	.LCFI14
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 30


 1241 0130 04000000 		.4byte	.LCFI15
 1242 0134 0200     		.2byte	0x2
 1243 0136 7D       		.byte	0x7d
 1244 0137 04       		.sleb128 4
 1245 0138 04000000 		.4byte	.LCFI15
 1246 013c 06000000 		.4byte	.LCFI16
 1247 0140 0200     		.2byte	0x2
 1248 0142 7D       		.byte	0x7d
 1249 0143 18       		.sleb128 24
 1250 0144 06000000 		.4byte	.LCFI16
 1251 0148 66000000 		.4byte	.LFE6
 1252 014c 0200     		.2byte	0x2
 1253 014e 77       		.byte	0x77
 1254 014f 18       		.sleb128 24
 1255 0150 00000000 		.4byte	0
 1256 0154 00000000 		.4byte	0
 1257              	.LLST7:
 1258 0158 00000000 		.4byte	.LFB7
 1259 015c 02000000 		.4byte	.LCFI17
 1260 0160 0200     		.2byte	0x2
 1261 0162 7D       		.byte	0x7d
 1262 0163 00       		.sleb128 0
 1263 0164 02000000 		.4byte	.LCFI17
 1264 0168 04000000 		.4byte	.LCFI18
 1265 016c 0200     		.2byte	0x2
 1266 016e 7D       		.byte	0x7d
 1267 016f 04       		.sleb128 4
 1268 0170 04000000 		.4byte	.LCFI18
 1269 0174 06000000 		.4byte	.LCFI19
 1270 0178 0200     		.2byte	0x2
 1271 017a 7D       		.byte	0x7d
 1272 017b 10       		.sleb128 16
 1273 017c 06000000 		.4byte	.LCFI19
 1274 0180 52000000 		.4byte	.LFE7
 1275 0184 0200     		.2byte	0x2
 1276 0186 77       		.byte	0x77
 1277 0187 10       		.sleb128 16
 1278 0188 00000000 		.4byte	0
 1279 018c 00000000 		.4byte	0
 1280              	.LLST8:
 1281 0190 00000000 		.4byte	.LFB8
 1282 0194 02000000 		.4byte	.LCFI20
 1283 0198 0200     		.2byte	0x2
 1284 019a 7D       		.byte	0x7d
 1285 019b 00       		.sleb128 0
 1286 019c 02000000 		.4byte	.LCFI20
 1287 01a0 04000000 		.4byte	.LCFI21
 1288 01a4 0200     		.2byte	0x2
 1289 01a6 7D       		.byte	0x7d
 1290 01a7 04       		.sleb128 4
 1291 01a8 04000000 		.4byte	.LCFI21
 1292 01ac 1E000000 		.4byte	.LFE8
 1293 01b0 0200     		.2byte	0x2
 1294 01b2 77       		.byte	0x77
 1295 01b3 04       		.sleb128 4
 1296 01b4 00000000 		.4byte	0
 1297 01b8 00000000 		.4byte	0
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 31


 1298              	.LLST9:
 1299 01bc 00000000 		.4byte	.LFB9
 1300 01c0 02000000 		.4byte	.LCFI22
 1301 01c4 0200     		.2byte	0x2
 1302 01c6 7D       		.byte	0x7d
 1303 01c7 00       		.sleb128 0
 1304 01c8 02000000 		.4byte	.LCFI22
 1305 01cc 04000000 		.4byte	.LCFI23
 1306 01d0 0200     		.2byte	0x2
 1307 01d2 7D       		.byte	0x7d
 1308 01d3 04       		.sleb128 4
 1309 01d4 04000000 		.4byte	.LCFI23
 1310 01d8 06000000 		.4byte	.LCFI24
 1311 01dc 0200     		.2byte	0x2
 1312 01de 7D       		.byte	0x7d
 1313 01df 10       		.sleb128 16
 1314 01e0 06000000 		.4byte	.LCFI24
 1315 01e4 1E000000 		.4byte	.LFE9
 1316 01e8 0200     		.2byte	0x2
 1317 01ea 77       		.byte	0x77
 1318 01eb 10       		.sleb128 16
 1319 01ec 00000000 		.4byte	0
 1320 01f0 00000000 		.4byte	0
 1321              	.LLST10:
 1322 01f4 00000000 		.4byte	.LFB10
 1323 01f8 02000000 		.4byte	.LCFI25
 1324 01fc 0200     		.2byte	0x2
 1325 01fe 7D       		.byte	0x7d
 1326 01ff 00       		.sleb128 0
 1327 0200 02000000 		.4byte	.LCFI25
 1328 0204 04000000 		.4byte	.LCFI26
 1329 0208 0200     		.2byte	0x2
 1330 020a 7D       		.byte	0x7d
 1331 020b 08       		.sleb128 8
 1332 020c 04000000 		.4byte	.LCFI26
 1333 0210 06000000 		.4byte	.LCFI27
 1334 0214 0200     		.2byte	0x2
 1335 0216 7D       		.byte	0x7d
 1336 0217 10       		.sleb128 16
 1337 0218 06000000 		.4byte	.LCFI27
 1338 021c 42000000 		.4byte	.LFE10
 1339 0220 0200     		.2byte	0x2
 1340 0222 77       		.byte	0x77
 1341 0223 10       		.sleb128 16
 1342 0224 00000000 		.4byte	0
 1343 0228 00000000 		.4byte	0
 1344              		.section	.debug_aranges,"",%progbits
 1345 0000 6C000000 		.4byte	0x6c
 1346 0004 0200     		.2byte	0x2
 1347 0006 00000000 		.4byte	.Ldebug_info0
 1348 000a 04       		.byte	0x4
 1349 000b 00       		.byte	0
 1350 000c 0000     		.2byte	0
 1351 000e 0000     		.2byte	0
 1352 0010 00000000 		.4byte	.LFB0
 1353 0014 2A000000 		.4byte	.LFE0-.LFB0
 1354 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 32


 1355 001c 26000000 		.4byte	.LFE1-.LFB1
 1356 0020 00000000 		.4byte	.LFB2
 1357 0024 0E000000 		.4byte	.LFE2-.LFB2
 1358 0028 00000000 		.4byte	.LFB3
 1359 002c 26000000 		.4byte	.LFE3-.LFB3
 1360 0030 00000000 		.4byte	.LFB4
 1361 0034 3A000000 		.4byte	.LFE4-.LFB4
 1362 0038 00000000 		.4byte	.LFB5
 1363 003c 3A000000 		.4byte	.LFE5-.LFB5
 1364 0040 00000000 		.4byte	.LFB6
 1365 0044 66000000 		.4byte	.LFE6-.LFB6
 1366 0048 00000000 		.4byte	.LFB7
 1367 004c 52000000 		.4byte	.LFE7-.LFB7
 1368 0050 00000000 		.4byte	.LFB8
 1369 0054 1E000000 		.4byte	.LFE8-.LFB8
 1370 0058 00000000 		.4byte	.LFB9
 1371 005c 1E000000 		.4byte	.LFE9-.LFB9
 1372 0060 00000000 		.4byte	.LFB10
 1373 0064 42000000 		.4byte	.LFE10-.LFB10
 1374 0068 00000000 		.4byte	0
 1375 006c 00000000 		.4byte	0
 1376              		.section	.debug_ranges,"",%progbits
 1377              	.Ldebug_ranges0:
 1378 0000 00000000 		.4byte	.LFB0
 1379 0004 2A000000 		.4byte	.LFE0
 1380 0008 00000000 		.4byte	.LFB1
 1381 000c 26000000 		.4byte	.LFE1
 1382 0010 00000000 		.4byte	.LFB2
 1383 0014 0E000000 		.4byte	.LFE2
 1384 0018 00000000 		.4byte	.LFB3
 1385 001c 26000000 		.4byte	.LFE3
 1386 0020 00000000 		.4byte	.LFB4
 1387 0024 3A000000 		.4byte	.LFE4
 1388 0028 00000000 		.4byte	.LFB5
 1389 002c 3A000000 		.4byte	.LFE5
 1390 0030 00000000 		.4byte	.LFB6
 1391 0034 66000000 		.4byte	.LFE6
 1392 0038 00000000 		.4byte	.LFB7
 1393 003c 52000000 		.4byte	.LFE7
 1394 0040 00000000 		.4byte	.LFB8
 1395 0044 1E000000 		.4byte	.LFE8
 1396 0048 00000000 		.4byte	.LFB9
 1397 004c 1E000000 		.4byte	.LFE9
 1398 0050 00000000 		.4byte	.LFB10
 1399 0054 42000000 		.4byte	.LFE10
 1400 0058 00000000 		.4byte	0
 1401 005c 00000000 		.4byte	0
 1402              		.section	.debug_line,"",%progbits
 1403              	.Ldebug_line0:
 1404 0000 3B010000 		.section	.debug_str,"MS",%progbits,1
 1404      02004E00 
 1404      00000201 
 1404      FB0E0D00 
 1404      01010101 
 1405              	.LASF25:
 1406 0000 53686966 		.ascii	"ShiftReg_output_SetIntMode\000"
 1406      74526567 
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 33


 1406      5F6F7574 
 1406      7075745F 
 1406      53657449 
 1407              	.LASF15:
 1408 001b 72656733 		.ascii	"reg32\000"
 1408      3200
 1409              	.LASF19:
 1410 0021 53686966 		.ascii	"ShiftReg_output_Init\000"
 1410      74526567 
 1410      5F6F7574 
 1410      7075745F 
 1410      496E6974 
 1411              	.LASF21:
 1412 0036 53686966 		.ascii	"ShiftReg_output_EnableInt\000"
 1412      74526567 
 1412      5F6F7574 
 1412      7075745F 
 1412      456E6162 
 1413              	.LASF18:
 1414 0050 53686966 		.ascii	"ShiftReg_output_Enable\000"
 1414      74526567 
 1414      5F6F7574 
 1414      7075745F 
 1414      456E6162 
 1415              	.LASF3:
 1416 0067 73686F72 		.ascii	"short unsigned int\000"
 1416      7420756E 
 1416      7369676E 
 1416      65642069 
 1416      6E7400
 1417              	.LASF2:
 1418 007a 73686F72 		.ascii	"short int\000"
 1418      7420696E 
 1418      7400
 1419              	.LASF11:
 1420 0084 666C6F61 		.ascii	"float\000"
 1420      7400
 1421              	.LASF1:
 1422 008a 756E7369 		.ascii	"unsigned char\000"
 1422      676E6564 
 1422      20636861 
 1422      7200
 1423              	.LASF14:
 1424 0098 72656738 		.ascii	"reg8\000"
 1424      00
 1425              	.LASF17:
 1426 009d 53686966 		.ascii	"ShiftReg_output_Start\000"
 1426      74526567 
 1426      5F6F7574 
 1426      7075745F 
 1426      53746172 
 1427              	.LASF23:
 1428 00b3 696E7465 		.ascii	"interruptState\000"
 1428      72727570 
 1428      74537461 
 1428      746500
 1429              	.LASF5:
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 34


 1430 00c2 6C6F6E67 		.ascii	"long unsigned int\000"
 1430      20756E73 
 1430      69676E65 
 1430      6420696E 
 1430      7400
 1431              	.LASF9:
 1432 00d4 75696E74 		.ascii	"uint8\000"
 1432      3800
 1433              	.LASF20:
 1434 00da 53686966 		.ascii	"ShiftReg_output_Stop\000"
 1434      74526567 
 1434      5F6F7574 
 1434      7075745F 
 1434      53746F70 
 1435              	.LASF26:
 1436 00ef 6669666F 		.ascii	"fifoId\000"
 1436      496400
 1437              	.LASF35:
 1438 00f6 53686966 		.ascii	"ShiftReg_output_GetIntStatus\000"
 1438      74526567 
 1438      5F6F7574 
 1438      7075745F 
 1438      47657449 
 1439              	.LASF12:
 1440 0113 646F7562 		.ascii	"double\000"
 1440      6C6500
 1441              	.LASF31:
 1442 011a 53686966 		.ascii	"ShiftReg_output_ReadRegValue\000"
 1442      74526567 
 1442      5F6F7574 
 1442      7075745F 
 1442      52656164 
 1443              	.LASF36:
 1444 0137 53686966 		.ascii	"ShiftReg_output_initVar\000"
 1444      74526567 
 1444      5F6F7574 
 1444      7075745F 
 1444      696E6974 
 1445              	.LASF22:
 1446 014f 53686966 		.ascii	"ShiftReg_output_DisableInt\000"
 1446      74526567 
 1446      5F6F7574 
 1446      7075745F 
 1446      44697361 
 1447              	.LASF27:
 1448 016a 696E7465 		.ascii	"interruptSource\000"
 1448      72727570 
 1448      74536F75 
 1448      72636500 
 1449              	.LASF29:
 1450 017a 73686966 		.ascii	"shiftData\000"
 1450      74446174 
 1450      6100
 1451              	.LASF34:
 1452 0184 433A5C55 		.ascii	"C:\\Users\\Zach\\Dropbox\\2014-2015\\Winter\\CE4950"
 1452      73657273 
 1452      5C5A6163 
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 35


 1452      685C4472 
 1452      6F70626F 
 1453 01b1 5C4E6574 		.ascii	"\\Networking\\Networking Project\\Networking Projec"
 1453      776F726B 
 1453      696E675C 
 1453      4E657477 
 1453      6F726B69 
 1454 01e1 742E6379 		.ascii	"t.cydsn\000"
 1454      64736E00 
 1455              	.LASF10:
 1456 01e9 75696E74 		.ascii	"uint32\000"
 1456      333200
 1457              	.LASF8:
 1458 01f0 756E7369 		.ascii	"unsigned int\000"
 1458      676E6564 
 1458      20696E74 
 1458      00
 1459              	.LASF7:
 1460 01fd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1460      206C6F6E 
 1460      6720756E 
 1460      7369676E 
 1460      65642069 
 1461              	.LASF24:
 1462 0214 72657375 		.ascii	"result\000"
 1462      6C7400
 1463              	.LASF16:
 1464 021b 73697A65 		.ascii	"sizetype\000"
 1464      74797065 
 1464      00
 1465              	.LASF6:
 1466 0224 6C6F6E67 		.ascii	"long long int\000"
 1466      206C6F6E 
 1466      6720696E 
 1466      7400
 1467              	.LASF13:
 1468 0232 63686172 		.ascii	"char\000"
 1468      00
 1469              	.LASF33:
 1470 0237 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ShiftReg_output.c\000"
 1470      6E657261 
 1470      7465645F 
 1470      536F7572 
 1470      63655C50 
 1471              	.LASF30:
 1472 0262 53686966 		.ascii	"ShiftReg_output_GetFIFOStatus\000"
 1472      74526567 
 1472      5F6F7574 
 1472      7075745F 
 1472      47657446 
 1473              	.LASF32:
 1474 0280 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1474      4320342E 
 1474      372E3320 
 1474      32303133 
 1474      30333132 
 1475 02b3 616E6368 		.ascii	"anch revision 196615]\000"
ARM GAS  C:\Users\Zach\AppData\Local\Temp\cc3sRA6s.s 			page 36


 1475      20726576 
 1475      6973696F 
 1475      6E203139 
 1475      36363135 
 1476              	.LASF4:
 1477 02c9 6C6F6E67 		.ascii	"long int\000"
 1477      20696E74 
 1477      00
 1478              	.LASF0:
 1479 02d2 7369676E 		.ascii	"signed char\000"
 1479      65642063 
 1479      68617200 
 1480              	.LASF28:
 1481 02de 53686966 		.ascii	"ShiftReg_output_WriteRegValue\000"
 1481      74526567 
 1481      5F6F7574 
 1481      7075745F 
 1481      57726974 
 1482              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
